@mixin ab-grid-wrap(){
    width: $layout-max-width;
    overflow: hidden;
    margin: 0 auto;
    max-width: 100%;
    
    @media #{$tablet-landscape-point} {
        width: 96%;
    }
}

@mixin ab-grid($columns){
    float: left;
    display: inline;
    margin-left: $layout-column-margin * 100%;
    margin-right: $layout-column-margin * 100%;
    position: relative;
    $column_percentage: ($layout-column-margin * 2) * 100%;
    
    @if $columns == "third" {
        width: (100% / 3) - $column_percentage;
    } @else if $columns == "twothird" {
        width: ((100% / 3) * 2) - $column_percentage;
    } @else {
        width: (($columns / $layout-number-of-columns - (2 * $layout-column-margin)) * 100%);
    }
    
    @media #{$mobile-landscape-wide-point} {
        float: none;
        width: auto;
        display: block;
        margin-bottom: 1em;
    }
}

@mixin ab-grid-pull($columns, $pull){
    @include ab-grid($columns);
    right: (($pull / $layout-number-of-columns) * 100%);
    
    @media #{$mobile-landscape-wide-point} {
	    right: auto;
    }
}

@mixin ab-grid-push($columns, $push){
    @include ab-grid($columns);
    left: (($push / $layout-number-of-columns) * 100%);
    
    @media #{$mobile-landscape-wide-point} {
	    left: auto;
    }
}

@mixin ab-grid-clear(){
    clear: both;
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0;
}

/* Grid Classes
---------------------------------------------------------------------------------------------------- */

.container {
	@include ab-grid-wrap();
}

@for $i from 1 to $layout-number-of-columns {
    .grid_#{$i} {
        @include ab-grid($i);
    }
}

.alpha {
	margin-left: 0;
}

.omega {
	margin-right: 0;
}

.clear {
	@include ab-grid-clear();
}